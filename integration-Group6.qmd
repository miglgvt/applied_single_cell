---
title: "Multimodal Integration"
format: html
editor: visual
---

1.  Cell clustering

```{r}

NTs.seu <- RunUMAP(NTs.seu, reduction = "pca", dims = 1:30)
NTs.seu <- FindNeighbors(NTs.seu, reduction = "pca", dims = 1:30)

# Run FindClusters using three different resolutions
NTs.seu <- FindClusters(NTs.seu, resolution = 0.3, algorithm = 2)
NTs.seu <- FindClusters(NTs.seu, resolution = 0.9, algorithm = 2)
NTs.seu <- FindClusters(NTs.seu, resolution = 0.5, algorithm = 2)

# check the cluster location
DimPlot(NTs.seu, label=TRUE, group.by = "RNA_snn_res.0.9")

# check the cluster location
DimPlot(NTs.seu, label=TRUE,  group.by = "RNA_snn_res.0.3")

# check the cluster location
DimPlot(NTs.seu, label=TRUE,  group.by = "RNA_snn_res.0.5")
```

Run clustree

```{r}
library(clustree)
clustree(NTs.seu, prefix = "RNA_snn_res.")

Idents(NTs.seu) <- "RNA_snn_res.0.9"
```

```{r}
# Find markers
NTs.seu <- SCTransform(NTs.seu, method = "glmGamPoi", vars.to.regress = "percent.mt")
NTs.seu <- PrepSCTFindMarkers(NTs.seu)
# Find markers for every cluster compared to all remaining cells, report only the positive ones
NTs_markers <- FindAllMarkers(object = NTs.seu, 
                              assay='SCT',
                              only.pos = TRUE,
                              logfc.threshold = 0.25)

NTs_top <- NTs_markers %>%
  group_by(cluster) %>%
  top_n(n = 20,
        wt = avg_log2FC)

sheetlist <- list("allPosMarkers"=NTs_markers,"Top20Markers"=NTs_top)
write_xlsx(sheetlist, '/scratch/u/kfang/scRNA_scATAC/10x_result/scRNA/NTs_markers.xlsx')

# plot stackviolin plot
NTs.marker <- c("KRT15","KRT16","KRT17", # Basal
                "ESRP1","ELF3","RARRES1",       # Luminal
                "TOP2A", "CDK1","MKI67","CENPF", #Luminal Progenitor
                "COL4A6","COL4A5",
                "S100A10", "ID1",
                "CXCL1", "CXCL8", 
                "CD24")

VlnPlot(NTs.seu, features = NTs.marker,
        stack=T,pt.size=0,
        flip = T,
        add.noise = T) +
  theme(axis.text.y = element_blank(), 
        axis.ticks.y = element_blank(),
        axis.title = element_blank(),
        axis.text.x = element_text(colour = 'black',size = 14),
        legend.position = 'none')

```

1.  Load reference dataset

```{r}
# Load the dataset
ref_dataset <- readRDS("/home/people/s233658/projects/applied_single_cell/data/9dff3651-e629-4519-aaab-dbd21b6b02b1.rds")
```

Convert cell_type to character

```{r}
#Convert cell_type to character
ref_dataset$cell_type <- as.character(ref_dataset@meta.data$cell_type)
```

Subsetting by breast tissue

```{r}
# Subset Seurat object by tissue
ref_dataset_breast <- subset(ref_dataset, subset = tissue == "breast")
```

Tranform reference dataset into singlecellexperiment object

```{r}
sce <- as.SingleCellExperiment(ref_dataset)
```

2.  Run SingleR

```{r}
# Run SingleR for annotation
annotations <- SingleR(
  test = query,
  ref = sce,
  labels = ref_dataset$cell_type,
  de.method = 'wilcox' 
)
```

Inspect quality predictions

```{r}
# Inspect the resulting annotations
head(annotations)
# Inspect quality of the predictions
plotScoreHeatmap(ct_ann)
plotDeltaDistribution(ct_ann, ncol = 4, dots.on.top = FALSE)
```

3.  Add SingleR predictions to Seurat object

```{r}
# Add annotations to Seurat metadata
if (inherits(query_dataset, "Seurat")) {
  query_dataset[["SingleR.labels"]] <- annotations$labels
}
```

```{r}
# Seurat DimPlot with annotations
DimPlot(query_dataset, group.by = "SingleR.labels", label = TRUE, repel = TRUE)

```

```{r}
saveRDS(query_dataset, "/path/to/annotated_query_dataset.rds")
```

```{r}
library(Seurat)
library(Signac)
library(ggplot2)
```

```{r}
atac.integrated <- readRDS('data/scATAC/atac.integrated.rds')
rna.integrated <- readRDS('data/scRNA/rna.integrated.rds')
```

```{r}
rna.integrated <- NormalizeData(rna.integrated)
rna.integrated <- FindVariableFeatures(rna.integrated)
rna.integrated <- ScaleData(rna.integrated)
rna.integrated <- RunPCA(rna.integrated)
rna.integrated <- RunUMAP(rna.integrated, dims = 1:30)

atac.integrated <- RunTFIDF(atac.integrated)
atac.integrated <- FindTopFeatures(atac.integrated, min.cutoff = "q0")
atac.integrated <- RunSVD(atac.integrated)
atac.integrated <- RunUMAP(atac.integrated, reduction = "lsi", dims = 2:30, reduction.name = "umap.atac", reduction.key = "atacUMAP_")

```

## Identifying anchors between scRNA-seq and scATAC-seq datasets

```{r}
# quantify gene activity
gene.activities <- GeneActivity(atac.integrated, features = VariableFeatures(rna.integrated))

```
