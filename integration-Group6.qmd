---
title: "Annotation"
format: html
editor: visual
---

1.  Cell clustering

```{r}

TTs.combined.sct <- RunUMAP(TTs.combined.sct, reduction = "pca", dims = 1:30)
TTs.combined.sct <- FindNeighbors(TTs.combined.sct, reduction = "pca", dims = 1:30)

# Run FindClusters using three different resolutions
TTs.combined.sct <- FindClusters(TTs.combined.sct, resolution = 0.3, algorithm = 2)
TTs.combined.sct <- FindClusters(TTs.combined.sct, resolution = 0.9, algorithm = 2)
TTs.combined.sct <- FindClusters(TTs.combined.sct, resolution = 0.5, algorithm = 2)

# check the cluster location
DimPlot(TTs.combined.sct, label=TRUE, group.by = "integrated_snn_res.0.9")

# check the cluster location
DimPlot(TTs.combined.sct, label=TRUE,  group.by = "integrated_snn_res.0.3")

# check the cluster location
DimPlot(TTs.combined.sct, label=TRUE,  group.by = "integrated_snn_res.0.5")
```

Run clustree

```{r}
library(clustree)
clustree(TTs.combined.sct, prefix = "integrated_snn_res.")

Idents(TTs.combined.sct) <- "integrated_snn_res.0.5"
```

Annotation with singleR

```{r}
library(SingleR)
library(Seurat)
library(SingleCellExperiment)
library(org.Hs.eg.db)

```

1.  Load reference dataset

```{r}
# Load the dataset
ref_dataset <- readRDS("/home/people/s233658/projects/applied_single_cell/data/9dff3651-e629-4519-aaab-dbd21b6b02b1.rds")
```

Convert cell_type to character

```{r}
#Convert cell_type to character
ref_dataset$cell_type <- as.character(ref_dataset@meta.data$cell_type)
```

Subsetting by breast tissue

```{r}
# Subset Seurat object by tissue
ref_dataset_breast <- subset(ref_dataset, subset = tissue == "breast")
```

Tranform reference dataset into singlecellexperiment object

```{r}
sce <- as.SingleCellExperiment(ref_dataset_breast)
```

```{r}
integrated.seu <- readRDS("data/scRNA/TTs.combined.sct")
```

```{r}
#class(integrated.seu)
#dim(integrated.seu)
```

Transforming the seurat object into a matrix

```{r}
expression_matrix <- GetAssayData(integrated.seu, assay = "RNA", slot = "data")
```

```{r}
# Check row names in the test dataset
head(rownames(expression_matrix))

# Check row names in the reference dataset
head(rownames(sce))

```

**Map gene identifier:**

Map the gene symbols in your `expression_matrix` to Ensembl IDs to match the reference (`sce`)

```{r}
# Map gene symbols to Ensembl IDs
gene_mapping <- AnnotationDbi::select(
  org.Hs.eg.db,
  keys = rownames(expression_matrix),  # Use the row names from expression_matrix
  columns = "ENSEMBL",                 # Target Ensembl IDs
  keytype = "SYMBOL"                   # Input is gene symbols
)

# Filter for valid mappings
valid_genes <- gene_mapping[!is.na(gene_mapping$ENSEMBL), ]
```

#### **Subset the Test Data to Mapped Genes**

Filter the `expression_matrix` to include only genes with valid mappings and update the row names to Ensembl IDs:

```{r}
# Subset expression_matrix to include only valid genes
expression_matrix <- expression_matrix[rownames(expression_matrix) %in% valid_genes$SYMBOL, ]

# Update row names to Ensembl IDs
rownames(expression_matrix) <- valid_genes$ENSEMBL[match(rownames(expression_matrix), valid_genes$SYMBOL)]

```

#### **Subset Both Datasets to Common Genes**

Now, ensure that both `expression_matrix` and `sce` only include the genes they have in common:

```{r}
# Identify common genes
common_genes <- intersect(rownames(expression_matrix), rownames(sce))

# Subset test and reference datasets
expression_matrix <- expression_matrix[common_genes, ]
sce <- sce[common_genes, ]

```

```{r}
# Run SingleR for annotation
library(SingleR)

annotations <- SingleR(
  test = as.matrix(expression_matrix),  # Convert to matrix if needed
  ref = sce,  # Reference dataset
  labels = sce$cell_type,  # Reference cell type labels
  de.method = 'wilcox'
)

```

Inspect quality predictions

```{r}
# Inspect the resulting annotations
head(annotations)
# Inspect quality of the predictions
plotScoreHeatmap(annotations)
plotDeltaDistribution(annotations, ncol = 4, dots.on.top = FALSE)
```

3.  Add SingleR predictions to Seurat object

```{r}
# Add annotations to Seurat metadata
if (inherits(query_dataset, "Seurat")) {
  query_dataset[["SingleR.labels"]] <- annotations$labels
}
```

```{r}
# Seurat DimPlot with annotations
DimPlot(query_dataset, group.by = "SingleR.labels", label = TRUE, repel = TRUE)

```

```{r}
saveRDS(query_dataset, "/path/to/annotated_query_dataset.rds")
```

```{r}
library(Seurat)
library(Signac)
library(ggplot2)
```

```{r}
atac.integrated <- readRDS('data/scATAC/atac.integrated.rds')
rna.integrated <- readRDS('data/scRNA/rna.integrated.rds')
```

```{r}
rna.integrated <- NormalizeData(rna.integrated)
rna.integrated <- FindVariableFeatures(rna.integrated)
rna.integrated <- ScaleData(rna.integrated)
rna.integrated <- RunPCA(rna.integrated)
rna.integrated <- RunUMAP(rna.integrated, dims = 1:30)

atac.integrated <- RunTFIDF(atac.integrated)
atac.integrated <- FindTopFeatures(atac.integrated, min.cutoff = "q0")
atac.integrated <- RunSVD(atac.integrated)
atac.integrated <- RunUMAP(atac.integrated, reduction = "lsi", dims = 2:30, reduction.name = "umap.atac", reduction.key = "atacUMAP_")

```

## Identifying anchors between scRNA-seq and scATAC-seq datasets

```{r}
# quantify gene activity
gene.activities <- GeneActivity(atac.integrated, features = VariableFeatures(rna.integrated))

```
